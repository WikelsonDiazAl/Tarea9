@page "/Login"
@rendermode InteractiveServer
@inject ContextoVivencia Cv
@inject IJSRuntime JSx
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager NavMan

<h2>Login</h2>

<div class="formulario">
    <EditForm Model="login" OnValidSubmit="ValidarUsuario">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label for="Correo">Correo:</label>
            <InputText id="Correo" class="form-control" @bind-Value="login.Correo" />
        </div>

        <div class="form-group mb-3">
            <label for="Clave">Clave:</label>
            <InputText id="Clave" class="form-control" @bind-Value="login.Clave" type="password" />
        </div>

        <div>
            <p>¿No tienes una cuenta?</p><a id="linkk" href="/Registrar">Registrarse</a>
        </div>

        <div>
            <button id="btnsesion" type="submit">Iniciar sesión</button>
        </div>
    </EditForm>
</div>

@if (mostrarModal)
{
    <div class="modal" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Error</h5>
                    <button type="button" class="close" @onclick="CerrarModal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@mensajeError</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="CerrarModal">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private LoginModel login = new LoginModel();
    private bool mostrarModal = false;
    private string mensajeError = string.Empty;

    private async Task ValidarUsuario()
    {
        UsuarioSession.GetInstance().LimpiarSesion();

        var usuario = await Cv.Usuarios
            .FirstOrDefaultAsync(u => u.Correo == login.Correo && u.Clave == login.Clave);

        if (usuario != null)
        {
            UsuarioSession.GetInstance().SetUsuario(usuario);
            NavMan.NavigateTo($"/Vivencias/{usuario.UsuarioId}");
        }
        else
        {
            mensajeError = "Correo o clave incorrectos.";
            mostrarModal = true;
        }
    }

    private void CerrarModal()
    {
        mostrarModal = false;
    }
}
