@page "/Registrar"
@rendermode InteractiveServer
@inject ContextoVivencia Cv
@inject IJSRuntime JSx
@inject NavigationManager NavMan



<h2>Registrar</h2>

<div class="formulario">
<EditForm Model="usuarios" OnValidSubmit="RegistrarUsuario">
    <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="form-group mb-3">
            <label for="Usuario">Usuario:</label>
            <InputText id="Usuario" class="form-control" @bind-Value="usuarios.NombreUsuario" />
        </div>

        <div class="form-group mb-3">
            <label for="Correo">Correo:</label>
            <InputText id="Correo" class="form-control" @bind-Value="usuarios.Correo" />
        </div>

        <div class="form-group mb-3">
            <label for="Clave">Clave:</label>
            <InputText id="Clave" class="form-control" @bind-Value="usuarios.Clave" />
        </div>

        <div>
        <p> ¿Tienes una cuenta?</p><a href="/Login">Iniciar sesión</a>
        </div>

        <div>
            <button type="submit"> Registrar</button>
        </div>

</EditForm>
</div>

@code{
    Usuario usuarios = new Usuario();

    async Task RegistrarUsuario(){

        Cv.Usuarios.Add(usuarios);
        await Cv.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert", "Usuario registrado con exito");
        NavMan.NavigateTo("/Login");
    }
}